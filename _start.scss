@use "sass:map";
@import "./scss/main.scss";





/*
// BEM: Block-Element-Modifier 
// syst√®me 7-1: Type de codebase optimal pour le codage en sass (scss)


  CSS ETAPE 4:
    DANS NOTRE COMPOSANT BEM, L'√âL√âMENT '.exemple__section' SEMBLE AUSSI POUVOIR √äTRE TRANSFORMABLE EN COMPOSANT BEM
    NOUS APPELERONT CE NOUVEAU COMPOSANT '.section'

    IDENTIFIER CE FUTUR BLOCK BEM .section DANS LES R√àGLES DE STYLE SASS 
    PUIS, IDENTIFIER SES √âL√âMENTS (BALISES QUE VOUS VENEZ DE D√âFINIR DANS LE CODE HTML COMME LES √âL√âMENTS DU FUTURE BLOCK BEM .section)
    PUIS, CHANGER CE QU'IL FAUT POUR FAIRE APPARA√éTE LE NOM DE CES CLASSES BEM DANS VOTRE HI√âRARCHIE SASS

*/

@keyframes menuPageAnimation{
0%{height:0px;opacity:0;}
90%{height: 500px;opacity:1;}
100%{height:auto;opacity:1;overflow:visible;}
}


main>article{}

/******************************************************************************************/
/*****************************************block .section***********************************/
.section{
  &__titre{
    text-transform: uppercase;
    margin-bottom:3rem;
    @extend %titre1--s;
    @extend %rel;

    @extend %titres;
    @extend %fontB;
    &.--menu{
      @extend %titre-menu;    
    }
    &.--underline/*,&--underline*/{
      @extend .before__titles--underline;
    }
  }
  &__list{
    height:0;
    animation: menuPageAnimation 1s ease-in 1s 1 forwards;
    overflow:hidden;
    margin-bottom: 5rem;


    @include blockList-0__list();
    // @include blockList-0__list--liAnimation-0;
    @include blockList-0__list--liAnimation-1;
  }
  &__button{
    @include jumbotron__explorerButton;
  }
}
/******************************************************************************************/
/*****************************************block exemple************************************/
$exemple: (name: 'exemple'); // a map conaining at least a 'name' key, in case of use as an subcomponent
@function exemple($_exemple: $exemple){
// ..do stuff 
//...and @if $_exemple exists, merge it into $exemple before sending it back
//...and @if it doesn't, apply your conditions on $exemple
@if $_exemple != $exemple {
    $exemple: map.merge($exemple, $_exemple);
    // ..and maybe do other stuff. you can: 
    // - forbidden value types, 
    // - bound values, 
    // - darknessing or lightnessing colors, 
    // - etc...
    // @if map-has-key($_exemple, 'name'){$exemple: map.set($exemple, "name", map.get($_exemple, "name")) + "modifying name property by adding string to it for example...";}
    // @if map-has-key($_exemple, 'padding'){}
    // @if map-has-key($_exemple, 'some_custom_values'){}
    // ....
}
@return $exemple;
}
@mixin exemple($exemple: exemple()){
  @extend %exemple;
  &__titre{@extend %exemple__titre;}
  &__section{@extend %exemple__section;}
}
%exemple{
  padding: 2rem 1rem;
  border-radius: 3rem 3rem 0 0;
  background: white;
  position: relative;
  background: whitesmoke;
  &__titre{
    padding-right: 5%;
    margin-block-end: 4rem;
    @extend %titre-menu;    
    a.coeur{text-decoration: none;
      @extend %floatR;
      @include pseudo-classes(btn-coeur(ü§ç,üß°), "before");
    }
  }
  &__section{
  }
}
.exemple{@include exemple();}